# {{ template "chart.description" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

This umbrella chart installs the helm charts of the [CX Portal](https://github.com/eclipse-tractusx/portal-cd/blob/portal-1.6.0/charts/portal/README.md) and of the [CX IAM](https://github.com/eclipse-tractusx/portal-iam) Keycloak instances ([centralidp](https://github.com/eclipse-tractusx/portal-iam/blob/centralidp-1.2.0/charts/centralidp/README.md) and [sharedidp](https://github.com/eclipse-tractusx/portal-iam/blob/sharedidp-1.2.0/charts/sharedidp/README.md)).

It's intended for the local setup of the those components in order to aid the local development. To integrate your local development, adapt the address values in the Values file for [Portal Frontend](./values.yaml#L23) and/or [Portal Backend](./values.yaml#L27).

This chart also sets up an additional [postgresql](https://artifacthub.io/packages/helm/bitnami/postgresql) instance to support the Portal Backend development as well as a [pgadmin4](https://artifacthub.io/packages/helm/runix/pgadmin4) instance for easy access to the deployed Postgres databases which are only available from within the Kubernetes cluster.

For detailed information about the default configuration values, please have a look at the [Values table](#values) and/or [Values file](./values.yaml).

## Usage

The following steps describe how to setup the LocalDev chart into the namespace 'localdev' of your started [**Minikube**](https://minikube.sigs.k8s.io/docs/start) cluster:

> **Note**
>
> In its current state of development, this chart as well as the following installation guide have been tested on Linux and Mac.
>
> **Linux** is the **preferred platform** to install this chart on as the network setup with Minikube is very straightforward on Linux.
>
> We plan to test the chart's reliability also on Windows and to update the installation guide accordingly.

> **Recommendations**
>
> Resources for Minikube
> | CPU(cores) | Memory(GB) |
> | :--------: | :--------: |
> |     2      |      6     |
>
> Use the dashboard provided by Minikube to get an overview about the deployed components:
>
> ```bash 
> minikube dashboard
> ```

1. [Prepare self-signed TLS setup](#1-prepare-self-signed-tls-setup)
2. [Prepare network setup](#2-prepare-network-setup)
3. [Install from released chart or portal-cd repository](#3-install-from-released-chart-or-portal-cd-repository)
4. [Perform first login](perform-first-login)

### 1. Prepare self-signed TLS setup

```bash
helm repo add jetstack https://charts.jetstack.io
helm repo update
```
```bash
helm install \
  cert-manager jetstack/cert-manager \
  --namespace localdev \
  --create-namespace \
  --version v1.13.0 \
  --set installCRDs=true
```

```bash
kubectl apply -f - <<EOF
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-selfsigned-ca
  namespace: localdev
spec:
  isCA: true
  commonName: cx.local
  secretName: root-secret
  privateKey:
    algorithm: RSA
    size: 2048
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
    group: cert-manager.io
  subject:
    organizations:
      - CX
    countries:
      - DE
    provinces:
      - Some-State
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: my-ca-issuer
spec:
  ca:
    secretName: root-secret
EOF
```
See [cert-manager self-signed](https://cert-manager.io/docs/configuration/selfsigned) for reference.

### 2. Prepare network setup

In order to enable the local access via ingress, use the according addon for Minikube:

```bash
minikube addons enable ingress
```

Make sure that the DNS resolution for the hostnames is in place:

```bash
minikube addons enable ingress-dns
```
And execute installation step [3 Add the `minikube ip` as a DNS server](https://minikube.sigs.k8s.io/docs/handbook/addons/ingress-dns) for your OS:

```
domain example.org
nameserver 192.168.49.2
search_order 1
timeout 5
```
Replace 192.168.49.2 with your minikube ip.

To find out the IP address of your Minikube:

```bash 
minikube ip
```

Additional network setup for Mac only:

Install and start [docker-mac-net-connect](https://github.com/chipmk/docker-mac-net-connect#installation).

Necessary due to [#7332](https://github.com/kubernetes/minikube/issues/7332).

### 3. Install from released chart or [portal-cd](https://github.com/eclipse-tractusx/portal-cd) repository

#### From the released chart

Install the chart with the release name 'local':

```bash
helm repo add tractusx-dev https://eclipse-tractusx.github.io/charts/dev
helm install local tractusx-dev/{{ template "chart.name" . }} --namespace localdev
```

To set your own configuration and secret values, install the helm chart with your own values file:

```bash
helm install -f your-values.yaml local tractusx-dev/{{ template "chart.name" . }} --namespace localdev
```

#### From [portal-cd](https://github.com/eclipse-tractusx/portal-cd) repository:

Make sure to clone the [portal-cd](https://github.com/eclipse-tractusx/portal-cd) repository beforehand.

Then change to the chart directory:

```bash
cd charts/localdev/
```
Download the chart dependencies:

```bash
helm dependency update
```

Install the chart with the release name 'local':

```bash
helm install local . --namespace localdev
```

To set your own configuration and secret values, install the helm chart with your own values file:

```bash
helm install local -f your-values.yaml . --namespace localdev
```

### 4. Perform first login

Make sure to accept the risk of the self-signed certificates for the following hosts using the continue option:
- [centralidp.example.org/auth/](https://centralidp.example.org/auth/)
- [sharedidp.example.org/auth/](https://sharedidp.example.org/auth/)
- [portal-backend.example.org](https://portal-backend.example.org)
- [portal.example.org](https://portal.example.org)
- [pgadmin4.example.org](https://pgadmin4.example.org)

Then proceed with the login to [portal.example.org](https://portal.example.org).

Credentials to log into the initial example realm (CX-Operator):

```
cx-operator@cx.com
```

```
7XSXRwYLAm5kU2H
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

Autogenerated with [helm docs](https://github.com/norwoodj/helm-docs)
