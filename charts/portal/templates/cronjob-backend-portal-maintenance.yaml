###############################################################
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "portal.fullname" . }}-{{ .Values.backend.portalmaintenance.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "portal.labels" . | nindent 4 }}
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    metadata:
      name: {{ include "portal.fullname" . }}-{{ .Values.backend.portalmaintenance.name }}
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: {{ include "portal.fullname" . }}-{{ .Values.backend.portalmaintenance.name }}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
            image: "{{ .Values.backend.portalmaintenance.image.name }}:{{ .Values.backend.portalmaintenance.image.portalmaintenancetag | default .Chart.AppVersion }}"
            imagePullPolicy: "{{ .Values.backend.portalmaintenance.image.pullPolicy }}"
            env:
              - name: DOTNET_ENVIRONMENT
                value: "{{ .Values.backend.dotnetEnvironment }}"
              {{- if .Values.postgresql.enabled }}
              - name: "PORTAL_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.postgresql.auth.existingSecret }}"
                    key: "portal-password"
              - name: "CONNECTIONSTRINGS__PORTALDB"
                value: "Server={{ template "portal.postgresql.primary.fullname" . }};Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
              {{- end }}
              {{- if not .Values.postgresql.enabled }}
              - name: "PORTAL_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.externalDatabase.secret }}"
                    key: "portal-password"
              - name: "CONNECTIONSTRINGS__PORTALDB"
                value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
              {{- end }}
              - name: "PROCESSIDENTITY__PROCESSUSERID"
                value: "{{ .Values.backend.portalmaintenance.processIdentity.processUserId }}"
              - name: "SERILOG__MINIMUMLEVEL__Default"
                value: "{{ .Values.backend.portalmaintenance.logging.default }}"
            ports:
            - name: http
              containerPort: {{ .Values.portContainer }}
              protocol: TCP
            resources:
              {{- toYaml .Values.backend.portalmaintenance.resources | nindent 14 }}
