###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.backend.processesworker.name }}
spec:
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: {{ .Values.backend.processesworker.name }}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
            image: "{{ .Values.backend.processesworker.image.name }}:{{ .Values.backend.processesworker.image.processesworkertag | default .Chart.AppVersion }}"
            imagePullPolicy: "{{ .Values.backend.processesworker.image.pullPolicy }}"
            env:
            - name: DOTNET_ENVIRONMENT
              value: "{{ .Values.backend.dotnetEnvironment }}"
            {{- if .Values.postgresql.enabled }}
            - name: "PORTAL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.auth.existingSecret }}"
                  key: "portal-password"
            - name: "PROVISIONING_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.auth.existingSecret }}"
                  key: "provisioning-password"
            - name: "CONNECTIONSTRINGS__PORTALDB"
              value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
            - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
              value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
            {{- end }}
            {{- if not .Values.postgresql.enabled }}
            - name: "PORTAL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.externalDatabase.secret }}"
                  key: "portal-password"
            - name: "PROVISIONING_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.externalDatabase.secret }}"
                  key: "provisioning-password"
            - name: "CONNECTIONSTRINGS__PORTALDB"
              value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
            - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
              value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
            {{- end }}
            - name: "APPLICATIONACTIVATION__APPLICATIONAPPROVALINITIALROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.portal }}"
            - name: "APPLICATIONACTIVATION__APPLICATIONAPPROVALINITIALROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.processesworker.applicationActivation.applicationApprovalInitialRoles.portal.role0 }}"
            - name: "APPLICATIONACTIVATION__CLIENTTOREMOVEROLESONACTIVATION__0"
              value: "{{ .Values.backend.processesworker.applicationActivation.clientToRemoveRolesOnActivation.client0 }}"
            - name: "APPLICATIONACTIVATION__BASEPORTALADDRESS"
              value: "{{ .Values.portalAddress }}"
            - name: "APPLICATIONACTIVATION__COMPANYADMINROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.registration }}"
            - name: "APPLICATIONACTIVATION__COMPANYADMINROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.processesworker.applicationActivation.applicationApprovalInitialRoles.registration.role0 }}"
            - name: "APPLICATIONACTIVATION__WELCOMENOTIFICATIONTYPEIDS__0"
              value: "{{ .Values.backend.processesworker.applicationActivation.welcomeNotificationTypeIds.type0 }}"
            - name: "APPLICATIONACTIVATION__WELCOMENOTIFICATIONTYPEIDS__1"
              value: "{{ .Values.backend.processesworker.applicationActivation.welcomeNotificationTypeIds.type1 }}"
            - name: "APPLICATIONACTIVATION__WELCOMENOTIFICATIONTYPEIDS__2"
              value: "{{ .Values.backend.processesworker.applicationActivation.welcomeNotificationTypeIds.type2 }}"
            - name: "APPLICATIONACTIVATION__WELCOMENOTIFICATIONTYPEIDS__3"
              value: "{{ .Values.backend.processesworker.applicationActivation.welcomeNotificationTypeIds.type3 }}"
            - name: "APPLICATIONACTIVATION__WELCOMENOTIFICATIONTYPEIDS__4"
              value: "{{ .Values.backend.processesworker.applicationActivation.welcomeNotificationTypeIds.type4 }}"
            - name: "APPLICATIONACTIVATION__LOGINTHEME"
              value: "{{ .Values.backend.processesworker.applicationActivation.loginTheme }}"
            - name: "APPLICATIONACTIVATION__PORTALHOMEADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.portalHomePath }}"
            - name: "APPLICATIONACTIVATION__PASSWORDRESENDADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.portalPasswordResendPath }}"
            - name: "APPLICATIONACTIVATION__COMPANYROLESPARTICIPANTADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.portalIntroductionCompanyRolePath }}"
            - name: "APPLICATIONACTIVATION__DATASPACEADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.portalIntroductionDataspacePath }}"
            - name: "APPLICATIONCHECKLIST__BPDM__BASEADDRESS"
              value: "{{ .Values.bpdmPortalGateAddress }}"
            - name: "APPLICATIONCHECKLIST__BPDM__CLIENTID"
              value: "{{ .Values.backend.processesworker.bpdm.clientId }}"
            - name: "APPLICATIONCHECKLIST__BPDM__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.interfaces.secret }}"
                  key: "bpdm-client-secret"
            - name: "APPLICATIONCHECKLIST__BPDM__GRANTTYPE"
              value: "{{ .Values.backend.processesworker.bpdm.grantType }}"
            - name: "APPLICATIONCHECKLIST__BPDM__KEYCLOAKTOKENADDRESS"
              value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
            - name: "APPLICATIONCHECKLIST__BPDM__PASSWORD"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__BPDM__SCOPE"
              value: "{{ .Values.backend.processesworker.bpdm.scope }}"
            - name: "APPLICATIONCHECKLIST__BPDM__USERNAME"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__BASEADDRESS"
              value: "{{ .Values.clearinghouseAddress }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__CLIENTID"
              value: "{{ .Values.backend.processesworker.clearinghouse.clientId }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.interfaces.secret }}"
                  key: "clearinghouse-client-secret"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__GRANTTYPE"
              value: "{{ .Values.backend.processesworker.clearinghouse.grantType }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__KEYCLOAKTOKENADDRESS"
              value: "{{ .Values.clearinghouseTokenAddress }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__PASSWORD"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__SCOPE"
              value: "{{ .Values.backend.processesworker.clearinghouse.scope }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__USERNAME"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__CALLBACKURL"
              value: "{{ .Values.portalBackendAddress }}{{ .Values.backend.processesworker.clearinghouse.callbackPath }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__BASEADDRESS"
              value: "{{ .Values.custodianAddress }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__MEMBERSHIPERRORMESSAGE"
              value: "{{ .Values.backend.processesworker.custodian.membershipErrorMessage }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__CLIENTID"
              value: "{{ .Values.backend.processesworker.custodian.clientId }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.interfaces.secret }}"
                  key: "custodian-client-secret"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__GRANTTYPE"
              value: "{{ .Values.backend.processesworker.custodian.grantType }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__KEYCLOAKTOKENADDRESS"
              value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__PASSWORD"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__SCOPE"
              value: "{{ .Values.backend.processesworker.custodian.scope }}"
            - name: "APPLICATIONCHECKLIST__CUSTODIAN__USERNAME"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__CLIENTID"
              value: "{{ .Values.backend.processesworker.sdfactory.clientId }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.interfaces.secret }}"
                  key: "sdfactory-client-secret"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__GRANTTYPE"
              value: "{{ .Values.backend.processesworker.sdfactory.grantType }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__KEYCLOAKTOKENADDRESS"
              value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__PASSWORD"
              value: "{{ .Values.backend.placeholder }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__SCOPE"
              value: "{{ .Values.backend.processesworker.sdfactory.scope }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__SDFACTORYISSUERBPN"
              value: "{{ .Values.backend.processesworker.sdfactory.issuerBpn }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__SDFACTORYURL"
              value: "{{ .Values.sdfactoryAddress }}{{ .Values.backend.processesworker.sdfactory.selfdescriptionPath }}"
            - name: "APPLICATIONCHECKLIST__SDFACTORY__USERNAME"
              value: "{{ .Values.backend.placeholder }}"
            - name: "KEYCLOAK__CENTRAL__AUTHREALM"
              value: "{{ .Values.backend.keycloak.central.authRealm }}"
            - name: "KEYCLOAK__CENTRAL__CLIENTID"
              value: "{{ .Values.backend.keycloak.central.clientId }}"
            - name: "KEYCLOAK__CENTRAL__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.keycloak.secret }}"
                  key: "central-client-secret"
            - name: "KEYCLOAK__CENTRAL__CONNECTIONSTRING"
              value: "{{ .Values.centralidpAddress }}"
            - name: "KEYCLOAK__CENTRAL__USEAUTHTRAIL"
              value: "{{ .Values.backend.keycloak.central.useAuthTrail }}"
            - name: "KEYCLOAK__SHARED__AUTHREALM"
              value: "{{ .Values.backend.keycloak.shared.authRealm }}"
            - name: "KEYCLOAK__SHARED__CLIENTID"
              value: "{{ .Values.backend.keycloak.shared.clientId }}"
            - name: "KEYCLOAK__SHARED__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.keycloak.secret }}"
                  key: "shared-client-secret"
            - name: "KEYCLOAK__SHARED__CONNECTIONSTRING"
              value: "{{ .Values.sharedidpAddress }}"
            - name: "KEYCLOAK__SHARED__USEAUTHTRAIL"
              value: "{{ .Values.backend.keycloak.shared.useAuthTrail }}"
            - name: "SERILOG__MINIMUMLEVEL__Default"
              value: "{{ .Values.backend.processesworker.logging.default }}"
            - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Processes.Worker.Library"
              value: "{{ .Values.backend.processesworker.logging.processesLibrary }}"
            - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Bpdm.Library"
              value: "{{ .Values.backend.processesworker.logging.bpdmLibrary }}"
            - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Clearinghouse.Library"
              value: "{{ .Values.backend.processesworker.logging.clearinghouseLibrary }}"
            - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Custodian.Library"
              value: "{{ .Values.backend.processesworker.logging.custodianLibrary }}"
            - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.SdFactory.Library"
              value: "{{ .Values.backend.processesworker.logging.sdfactoryLibrary }}"
            - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.OfferProvider.Library"
              value: "{{ .Values.backend.processesworker.logging.offerProvider }}"
            - name: "MAILINGSERVICE__MAIL__SMTPHOST"
              value: "{{ .Values.backend.mailing.host }}"
            - name: "MAILINGSERVICE__MAIL__SMTPPASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.mailing.secret }}"
                  key: "password"
            - name: "NETWORKREGISTRATION__INITIALROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.registration }}"
            - name: "NETWORKREGISTRATION__INITIALROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.provisioning.invitedUserInitialRoles.registration }}"
            - name: "NETWORKREGISTRATION__BASEPORTALADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.portalHomePath }}"
            - name: "NETWORKREGISTRATION__LOGINDOCUMENTADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.processesworker.networkRegistration.loginDocumentPath }}"
            - name: "NETWORKREGISTRATION__EXTERNALREGISTRATIONADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.processesworker.networkRegistration.externalRegistrationPath }}"
            - name: "NETWORKREGISTRATION__CLOSEAPPLICATIONADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.processesworker.networkRegistration.closeApplicationPath }}"
            - name: "MAILINGSERVICE__MAIL__SMTPPORT"
              value: "{{ .Values.backend.mailing.port }}"
            - name: "MAILINGSERVICE__MAIL__SMTPUSER"
              value: "{{ .Values.backend.mailing.user }}"
            - name: "PROCESSES__LOCKEXPIRYSECONDS"
              value: "{{ .Values.backend.processesworker.processes.lockExpirySeconds }}"
            - name: "PROVISIONING__CENTRALIDENTITYPROVIDER__CONFIG__CLIENTID"
              value: "{{ .Values.backend.provisioning.centralIdentityProvider.clientId }}"
            - name: "PROVISIONING__CENTRALREALM"
              value: "{{ .Values.backend.provisioning.centralRealm }}"
            - name: "PROVISIONING__CENTRALREALMID"
              value: "{{ .Values.backend.provisioning.centralRealmId }}"
            - name: "PROVISIONING__INVITEDUSERINITIALROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.registration }}"
            # -- if the array is extended please extend NETWORKREGISTRATION__INITIALROLES as well
            - name: "PROVISIONING__INVITEDUSERINITIALROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.provisioning.invitedUserInitialRoles.registration }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__AUTH"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.auth }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__FROM"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.from }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__HOST"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.host }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.mailing.secret }}"
                  key: "provisioning-sharedrealm-password"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__PORT"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.port }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__REPLYTO"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.replyTo }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__STARTTLS"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.startTls }}"
            - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__USER"
              value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.user }}"
            - name: "PROVISIONING__SHAREDREALMCLIENT__CLIENTID"
              value: "{{ .Values.backend.provisioning.sharedRealmClient.clientId }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__BASEPORTALADDRESS"
              value: "{{ .Values.portalAddress }}{{ .Values.backend.portalHomePath }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__SERVICEACCOUNTROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.technicalRolesManagement }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__SERVICEACCOUNTROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.processesworker.offerSubscriptionProcess.serviceAccountRoles.role0 }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__SERVICEMANAGERROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.portal }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__SERVICEMANAGERROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.processesworker.offerSubscriptionProcess.serviceManagerRoles.role0 }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__ITADMINROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.portal }}"
            - name: "OFFERSUBSCRIPTIONPROCESS__ITADMINROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.processesworker.offerSubscriptionProcess.itAdminRoles.role0 }}"
            - name: "OFFERPROVIDER__SERVICEMANAGERROLES__0__CLIENTID"
              value: "{{ .Values.backend.clients.portal }}"
            - name: "OFFERPROVIDER__SERVICEMANAGERROLES__0__USERROLENAMES__0"
              value: "{{ .Values.backend.processesworker.offerprovider.serviceManagerRoles.role0 }}"
            - name: "OFFERPROVIDER__CLIENTID"
              value: "{{ .Values.backend.processesworker.offerprovider.clientId }}"
            - name: "OFFERPROVIDER__CLIENTSECRET"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.interfaces.secret }}"
                  key: "offerprovider-client-secret"
            - name: "OFFERPROVIDER__GRANTTYPE"
              value: "{{ .Values.backend.processesworker.offerprovider.grantType }}"
            - name: "OFFERPROVIDER__KEYCLOAKTOKENADDRESS"
              value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
            - name: "OFFERPROVIDER__PASSWORD"
              value: "{{ .Values.backend.placeholder }}"
            - name: "OFFERPROVIDER__SCOPE"
              value: "{{ .Values.backend.processesworker.offerprovider.scope }}"
            - name: "OFFERPROVIDER__USERNAME"
              value: "{{ .Values.backend.placeholder }}"
            - name: "PROCESSIDENTITY__PROCESSUSERID"
              value: "{{ .Values.backend.processesworker.processIdentity.processUserId }}"
            - name: "ONBOARDINGSERVICEPROVIDER__ENCYRPTIONKEY"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.backend.interfaces.secret }}"
                  key: "process-onboardingserviceprovider-encryption-key"
            ports:
            - name: http
              containerPort: {{ .Values.portContainer }}
              protocol: TCP
            resources:
              {{- toYaml .Values.backend.processesworker.resources | nindent 14 }}
