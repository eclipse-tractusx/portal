###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.administration.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      app: {{ .Values.backend.administration.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.administration.name }}
    spec:
      containers:
      - name: {{ .Values.backend.administration.name }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        image: "{{ .Values.backend.administration.image.name }}:{{ .Values.backend.administration.image.administrationservicetag | default .Chart.AppVersion }}"
        imagePullPolicy: "Always"
        env:
        - name: DOTNET_ENVIRONMENT
          value: "{{ .Values.backend.dotnetEnvironment }}"
        {{- if .Values.postgresql.enabled }}
        - name: "PORTAL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.auth.existingSecret }}"
              key: "portal-password"
        - name: "PROVISIONING_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.auth.existingSecret }}"
              key: "provisioning-password"
        - name: "CONNECTIONSTRINGS__PORTALDB"
          value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
          value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "DATABASEACCESS__PORTAL__CONNECTIONSTRING"
          value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        {{- end }}
        {{- if not .Values.postgresql.enabled }}
        - name: "PORTAL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.externalDatabase.secret }}"
              key: "portal-password"
        - name: "PROVISIONING_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.externalDatabase.secret }}"
              key: "provisioning-password"
        - name: "CONNECTIONSTRINGS__PORTALDB"
          value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
          value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "DATABASEACCESS__PORTAL__CONNECTIONSTRING"
          value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};;"
        {{- end }}
        - name: "DATABASEACCESS__PORTAL__DATABASESCHEMA"
          value: "{{ .Values.backend.dbConnection.schema }}"
        - name: "KEYCLOAK_CENTRAL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "central-db-password"
        - name: "DATABASEACCESS__KEYCLOAK__CONNECTIONSTRING"
          value: "Server={{ .Values.backend.keycloak.central.dbConnection.host }};Database={{ .Values.backend.keycloak.central.dbConnection.database }};Port={{ .Values.backend.keycloak.central.dbConnection.port }};User Id={{ .Values.backend.keycloak.central.dbConnection.user }};Password=$(KEYCLOAK_CENTRAL_PASSWORD);Ssl Mode={{ .Values.backend.keycloak.central.dbConnection.sslMode }};"
        - name: "DATABASEACCESS__KEYCLOAK__DATABASESCHEMA"
          value: "{{ .Values.backend.keycloak.central.dbConnection.schema }}"
        - name: "APPLICATIONCHECKLIST__BPDM__BASEADDRESS"
          value: "{{ .Values.bpdmPortalGateAddress }}"
        - name: "APPLICATIONCHECKLIST__BPDM__CLIENTID"
          value: "{{ .Values.backend.processesworker.bpdm.clientId }}"
        - name: "APPLICATIONCHECKLIST__BPDM__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "bpdm-client-secret"
        - name: "APPLICATIONCHECKLIST__BPDM__GRANTTYPE"
          value: "{{ .Values.backend.processesworker.bpdm.grantType }}"
        - name: "APPLICATIONCHECKLIST__BPDM__KEYCLOAKTOKENADDRESS"
          value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
        - name: "APPLICATIONCHECKLIST__BPDM__PASSWORD"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__BPDM__SCOPE"
          value: "{{ .Values.backend.processesworker.bpdm.scope }}"
        - name: "APPLICATIONCHECKLIST__BPDM__USERNAME"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__BASEADDRESS"
          value: "{{ .Values.clearinghouseAddress }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__CLIENTID"
          value: "{{ .Values.backend.processesworker.clearinghouse.clientId }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "clearinghouse-client-secret"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__GRANTTYPE"
          value: "{{ .Values.backend.processesworker.clearinghouse.grantType }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__KEYCLOAKTOKENADDRESS"
          value: "{{ .Values.clearinghouseTokenAddress }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__PASSWORD"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__SCOPE"
          value: "{{ .Values.backend.processesworker.clearinghouse.scope }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__USERNAME"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__CLEARINGHOUSE__CALLBACKURL"
          value: "{{ .Values.portalBackendAddress }}{{ .Values.backend.processesworker.clearinghouse.callbackPath }}"  
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__MEMBERSHIPERRORMESSAGE"
          value: "{{ .Values.backend.processesworker.custodian.membershipErrorMessage }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__BASEADDRESS"
          value: "{{ .Values.custodianAddress }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__CLIENTID"
          value: "{{ .Values.backend.processesworker.custodian.clientId }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "custodian-client-secret"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__GRANTTYPE"
          value: "{{ .Values.backend.processesworker.custodian.grantType }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__KEYCLOAKTOKENADDRESS"
          value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__PASSWORD"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__SCOPE"
          value: "{{ .Values.backend.processesworker.custodian.scope }}"
        - name: "APPLICATIONCHECKLIST__CUSTODIAN__USERNAME"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__CLIENTID"
          value: "{{ .Values.backend.processesworker.sdfactory.clientId }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "sdfactory-client-secret"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__GRANTTYPE"
          value: "{{ .Values.backend.processesworker.sdfactory.grantType }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__KEYCLOAKTOKENADDRESS"
          value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.tokenPath }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__PASSWORD"
          value: "{{ .Values.backend.placeholder }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__SCOPE"
          value: "{{ .Values.backend.processesworker.sdfactory.scope }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__SDFACTORYISSUERBPN"
          value: "{{ .Values.backend.processesworker.sdfactory.issuerBpn }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__SDFACTORYURL"
          value: "{{ .Values.sdfactoryAddress }}{{ .Values.backend.processesworker.sdfactory.selfdescriptionPath }}"
        - name: "APPLICATIONCHECKLIST__SDFACTORY__USERNAME"
          value: "{{ .Values.backend.placeholder }}"
        - name: "COMPANYDATA__USECASEPARTICIPATIONMEDIATYPES__0"
          value: "{{ .Values.backend.administration.companyData.useCaseParticipationMediaTypes.type0 }}"
        - name: "COMPANYDATA__SSICERTIFICATEMEDIATYPES__0"
          value: "{{ .Values.backend.administration.companyData.ssiCertificateMediaTypes.type0 }}"
        - name: "CONNECTORS__VALIDCERTIFICATIONCONTENTTYPES__0"
          value: "{{ .Values.backend.administration.connectors.validCertificationContentTypes.type0 }}"
        - name: "CONNECTORS__VALIDCERTIFICATIONCONTENTTYPES__1"
          value: "{{ .Values.backend.administration.connectors.validCertificationContentTypes.type1 }}"
        - name: "CONNECTORS__VALIDCERTIFICATIONCONTENTTYPES__2"
          value: "{{ .Values.backend.administration.connectors.validCertificationContentTypes.type2 }}"
        - name: "CONNECTORS__VALIDCERTIFICATIONCONTENTTYPES__3"
          value: "{{ .Values.backend.administration.connectors.validCertificationContentTypes.type3 }}"
        - name: "CONNECTORS__SELFDESCRIPTIONDOCUMENTURL"
          value: "{{ .Values.portalBackendAddress }}{{ .Values.backend.administration.connectors.selfDescriptionDocumentPath }}"
        - name: "Document__EnableSeedEndpoint"
          value: "True"
        - name: "Document__FRAMEDOCUMENTTYPEIDS__0"
          value: "{{ .Values.backend.administration.frameDocumentTypeIds.type0 }}"
        - name: "HEALTHCHECKS__0__PATH"
          value: "{{ .Values.backend.healthChecks.startup.path}}"
        {{- if .Values.backend.administration.healthChecks.startup.tags }}
        {{- toYaml .Values.backend.administration.healthChecks.startup.tags | nindent 8 }}
        {{- end }}
        - name: "HEALTHCHECKS__1__PATH"
          value: "{{ .Values.backend.healthChecks.readyness.path}}"
        - name: "HEALTHCHECKS__2__PATH"
          value: "{{ .Values.backend.healthChecks.liveness.path}}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__CHARSET"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.charset }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__CONTENTTYPE"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.contentType }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__FILENAME"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.fileName }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADEREMAIL"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerEmail }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADERFIRSTNAME"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerFirstName }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADERLASTNAME"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerLastName }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADERPROVIDERALIAS"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerProviderAlias }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADERPROVIDERUSERID"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerProviderUserId }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADERPROVIDERUSERNAME"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerProviderUserName }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__HEADERUSERID"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.headerUserId }}"
        - name: "IDENTITYPROVIDERADMIN__CSVSETTINGS__SEPARATOR"
          value: "{{ .Values.backend.administration.identityProviderAdmin.csvSettings.separator }}"
        - name: "INVITATION__INVITEDUSERINITIALROLES__0__CLIENTID"
          value: "{{ .Values.backend.clients.registration }}"
        - name: "INVITATION__INVITEDUSERINITIALROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.administration.invitation.invitedUserInitialRoles.role0 }}"
        - name: "INVITATION__REGISTRATIONAPPADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.registration.portalRegistrationPath }}"
        - name: "INVITATION__INITIALLOGINTHEME"
          value: "{{ .Values.backend.administration.invitation.initialLoginTheme }}"
        - name: "JWTBEAREROPTIONS__METADATAADDRESS"
          value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.jwtBearerOptions.metadataPath }}"
        - name: "JWTBEAREROPTIONS__REQUIREHTTPSMETADATA"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.requireHttpsMetadata }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDAUDIENCE"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.validAudiencePortal }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDISSUER"
          value: "{{ .Values.centralidpAddress }}{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.validIssuerPath }}"
        - name: "JWTBEAREROPTIONS__REFRESHINTERVAL"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.refreshInterval }}"
        - name: "KEYCLOAK__CENTRAL__AUTHREALM"
          value: "{{ .Values.backend.keycloak.central.authRealm }}"
        - name: "KEYCLOAK__CENTRAL__CLIENTID"
          value: "{{ .Values.backend.keycloak.central.clientId }}"
        - name: "KEYCLOAK__CENTRAL__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "central-client-secret"
        - name: "KEYCLOAK__CENTRAL__CONNECTIONSTRING"
          value: "{{ .Values.centralidpAddress }}"
        - name: "KEYCLOAK__SHARED__AUTHREALM"
          value: "{{ .Values.backend.keycloak.shared.authRealm }}"
        - name: "KEYCLOAK__SHARED__CLIENTID"
          value: "{{ .Values.backend.keycloak.shared.clientId }}"
        - name: "KEYCLOAK__SHARED__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "shared-client-secret"
        - name: "KEYCLOAK__SHARED__CONNECTIONSTRING"
          value: "{{ .Values.sharedidpAddress }}"
        - name: "SERILOG__MINIMUMLEVEL__Default"
          value: "{{ .Values.backend.administration.logging.default }}"
        - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Administration.Service.BusinessLogic"
          value: "{{ .Values.backend.administration.logging.businessLogic }}"
        - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.SdFactory.Library"
          value: "{{ .Values.backend.administration.logging.sdfactoryLibrary }}"
        - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Custodian.Library"
          value: "{{ .Values.backend.administration.logging.custodianLibrary }}"
        - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Bpdm.Library"
          value: "{{ .Values.backend.administration.logging.bpdmLibrary }}"
        - name: "MAILINGSERVICE__MAIL__SMTPHOST"
          value: "{{ .Values.backend.mailing.host }}"
        - name: "MAILINGSERVICE__MAIL__SMTPPASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.mailing.secret }}"
              key: "password"
        - name: "MAILINGSERVICE__MAIL__SMTPPORT"
          value: "{{ .Values.backend.mailing.port }}"
        - name: "MAILINGSERVICE__MAIL__SMTPUSER"
          value: "{{ .Values.backend.mailing.user }}"
        - name: "NETWORK2NETWORK__INITIALROLES__0__CLIENTID"
          value: "{{ .Values.backend.clients.portal }}"
        - name: "NETWORK2NETWORK__INITIALROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.administration.network2network.initialRoles.role0 }}"
        - name: "NETWORK2NETWORK__BASEPORTALADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.portalHomePath }}"
        - name: "ONBOARDINGSERVICEPROVIDER__ENCYRPTIONKEY"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "onboardingserviceprovider-encryption-key"
        - name: "PROVISIONING__CENTRALIDENTITYPROVIDER__CONFIG__CLIENTID"
          value: "{{ .Values.backend.provisioning.centralIdentityProvider.clientId }}"
        - name: "PROVISIONING__CENTRALREALM"
          value: "{{ .Values.backend.provisioning.centralRealm }}"
        - name: "PROVISIONING__CENTRALREALMID"
          value: "{{ .Values.backend.provisioning.centralRealmId }}"
        - name: "PROVISIONING__INVITEDUSERINITIALROLES__0__CLIENTID"
          value: "{{ .Values.backend.clients.registration }}"
        - name: "PROVISIONING__INVITEDUSERINITIALROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.provisioning.invitedUserInitialRoles.registration }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__AUTH"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.auth }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__FROM"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.from }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__HOST"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.host }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.mailing.secret }}"
              key: "provisioning-sharedrealm-password"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__PORT"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.port }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__REPLYTO"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.replyTo }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__STARTTLS"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.startTls }}"
        - name: "PROVISIONING__SHAREDREALM__SMTPSERVER__USER"
          value: "{{ .Values.backend.provisioning.sharedRealm.smtpServer.user }}"
        - name: "PROVISIONING__SHAREDREALMCLIENT__CLIENTID"
          value: "{{ .Values.backend.provisioning.sharedRealmClient.clientId }}"
        - name: "REGISTRATION__DOCUMENTTYPEIDS__0"
          value: "{{ .Values.backend.administration.registration.documentTypeIds.type0 }}"
        - name: "SERVICEACCOUNT__CLIENTID"
          value: "{{ .Values.backend.administration.serviceAccount.clientId }}"
        - name: "SWAGGERENABLED"
          value: "{{ .Values.backend.administration.swaggerEnabled }}"
        - name: "USERMANAGEMENT__COMPANYUSERSTATUSIDS__0"
          value: "{{ .Values.backend.administration.userManagement.companyUserStatusIds.status0 }}"
        - name: "USERMANAGEMENT__COMPANYUSERSTATUSIDS__1"
          value: "{{ .Values.backend.administration.userManagement.companyUserStatusIds.status1 }}"
        - name: "USERMANAGEMENT__USERADMINROLES__0__CLIENTID"
          value: "{{ .Values.backend.clients.portal }}"
        - name: "USERMANAGEMENT__USERADMINROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.administration.userManagement.userAdminRoles.role0 }}"
        - name: "USERMANAGEMENT__USERADMINROLES__0__USERROLENAMES__1"
          value: "{{ .Values.backend.administration.userManagement.userAdminRoles.role1 }}"
        - name: "USERMANAGEMENT__PORTAL__BASEPORTALADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.portalHomePath }}"
        - name: "USERMANAGEMENT__PORTAL__KEYCLOAKCLIENTID"
          value: "{{ .Values.backend.administration.keycloakClientId }}"
        ports:
        - name: http
          containerPort: {{ .Values.portContainer }}
          protocol: TCP
        startupProbe:
          httpGet:
            path: {{ .Values.backend.healthChecks.startup.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          successThreshold: {{ .Values.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.backend.healthChecks.liveness.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.backend.healthChecks.readyness.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        resources:
          {{- toYaml .Values.backend.administration.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
