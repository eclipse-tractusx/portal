###############################################################
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portal.fullname" . }}-{{ .Values.backend.services.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "portal.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      app: {{ include "portal.fullname" . }}-{{ .Values.backend.services.name }}
      {{- include "portal.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "portal.fullname" . }}-{{ .Values.backend.services.name }}
        {{- include "portal.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.backend.services.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ include "portal.fullname" . }}-{{ .Values.backend.services.name }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        image: "{{ .Values.backend.services.image.name }}:{{ .Values.backend.services.image.servicesservicetag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.backend.services.image.pullPolicy }}"
        env:
        - name: DOTNET_ENVIRONMENT
          value: "{{ .Values.backend.dotnetEnvironment }}"
        - name: TMPDIR
          value: "/mnt/tmp"
        {{- if .Values.postgresql.enabled }}
        - name: "PORTAL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.auth.existingSecret }}"
              key: "portal-password"
        - name: "PROVISIONING_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.auth.existingSecret }}"
              key: "provisioning-password"
        - name: "CONNECTIONSTRINGS__PORTALDB"
          value: "Server={{ template "portal.postgresql.primary.fullname" . }};Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
          value: "Server={{ template "portal.postgresql.primary.fullname" . }};Database={{ .Values.postgresql.auth.database }};Port={{ .Values.postgresql.auth.port }};User Id={{ .Values.postgresql.auth.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        {{- end }}
        {{- if not .Values.postgresql.enabled }}
        - name: "PORTAL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.externalDatabase.secret }}"
              key: "portal-password"
        - name: "PROVISIONING_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.externalDatabase.secret }}"
              key: "provisioning-password"
        - name: "CONNECTIONSTRINGS__PORTALDB"
          value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
          value: "Server={{ .Values.externalDatabase.host }};Database={{ .Values.externalDatabase.database }};Port={{ .Values.externalDatabase.port }};User Id={{ .Values.externalDatabase.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        {{- end }}
        - name: "HEALTHCHECKS__0__PATH"
          value: "{{ .Values.backend.healthChecks.startup.path}}"
        {{- if .Values.backend.services.healthChecks.startup.tags }}
        {{- toYaml .Values.backend.services.healthChecks.startup.tags | nindent 8 }}
        {{- end }}
        - name: "HEALTHCHECKS__1__PATH"
          value: "{{ .Values.backend.healthChecks.readyness.path}}"
        - name: "HEALTHCHECKS__2__PATH"
          value: "{{ .Values.backend.healthChecks.liveness.path}}"
        - name: "JWTBEAREROPTIONS__METADATAADDRESS"
          value: "{{ .Values.centralidp.address }}{{ .Values.backend.keycloak.central.jwtBearerOptions.metadataPath }}"
        - name: "JWTBEAREROPTIONS__REQUIREHTTPSMETADATA"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.requireHttpsMetadata }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDAUDIENCE"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.validAudiencePortal }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDISSUER"
          value: "{{ .Values.centralidp.address }}{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.validIssuerPath }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__CLOCKSKEW"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.clockSkew }}"
        - name: "JWTBEAREROPTIONS__REFRESHINTERVAL"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.refreshInterval }}"
        - name: "KEYCLOAK__CENTRAL__AUTHREALM"
          value: "{{ .Values.centralidp.realm }}"
        - name: "KEYCLOAK__CENTRAL__CLIENTID"
          value: "{{ .Values.backend.keycloak.central.clientId }}"
        - name: "KEYCLOAK__CENTRAL__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "central-client-secret"
        - name: "KEYCLOAK__CENTRAL__CONNECTIONSTRING"
          value: "{{ .Values.centralidp.address }}"
        - name: "KEYCLOAK__CENTRAL__USEAUTHTRAIL"
          value: "{{ .Values.backend.keycloak.central.useAuthTrail }}"
        - name: "KEYCLOAK__SHARED__AUTHREALM"
          value: "{{ .Values.backend.keycloak.shared.authRealm }}"
        - name: "KEYCLOAK__SHARED__CLIENTID"
          value: "{{ .Values.backend.keycloak.shared.clientId }}"
        - name: "KEYCLOAK__SHARED__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "shared-client-secret"
        - name: "KEYCLOAK__SHARED__CONNECTIONSTRING"
          value: "{{ .Values.sharedidpAddress }}"
        - name: "KEYCLOAK__SHARED__USEAUTHTRAIL"
          value: "{{ .Values.backend.keycloak.shared.useAuthTrail }}"
        - name: "SERILOG__MINIMUMLEVEL__Default"
          value: "{{ .Values.backend.services.logging.default }}"
        - name: "SERILOG__MINIMUMLEVEL__OVERRIDE__Org.Eclipse.TractusX.Portal.Backend.Offers.Library.Service"
          value: "{{ .Values.backend.services.logging.offersLibrary }}"
        - name: "MVC_ROUTING_BASEPATH"
          value: "{{ .Values.backend.services.basePath }}"
        - name: "PROVISIONING__CENTRALREALM"
          value: "{{ .Values.centralidp.realm }}"
        - name: "PROVISIONING__CENTRALREALMID"
          value: "{{ .Values.backend.provisioning.centralRealmId }}"
        - name: "PROVISIONING__DIMUSERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.technicalRolesManagement }}"
        - name: "PROVISIONING__DIMUSERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.administration.serviceAccount.dimCreationRoles.role0 }}"
        - name: "SERVICES__APPROVESERVICENOTIFICATIONTYPEIDS__0"
          value: "{{ .Values.backend.services.approveServiceNotificationTypeIds.type0 }}"
        - name: "SERVICES__APPROVESERVICEUSERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__APPROVESERVICEUSERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.approveServiceUserRoles.role0 }}"
        - name: "SERVICES__APPROVESERVICEUSERROLES__0__USERROLENAMES__1"
          value: "{{ .Values.backend.services.approveServiceUserRoles.role1 }}"
        - name: "SERVICES__BASEPORTALADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.services.subscriptionPath }}"
        - name: "SERVICES__OFFERSUBSCRIPTIONADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.services.subscriptionPath }}"
        - name: "SERVICES__OFFERDETAILADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.services.detailPath }}"
        - name: "SERVICES__USERMANAGEMENTADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.userManagementPath }}"
        - name: "SERVICES__CATENAADMINROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__CATENAADMINROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.catenaAdminRoles.role0 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__0__DOCUMENTTYPEID"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.documentTypeId0 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__0__MEDIATYPES__0"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.mediaTypeIds0.mediaTypeId0 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__1__DOCUMENTTYPEID"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.documentTypeId1 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__1__MEDIATYPES__0"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.mediaTypeIds1.mediaTypeId0 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__1__MEDIATYPES__1"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.mediaTypeIds1.mediaTypeId1 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__1__MEDIATYPES__2"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.mediaTypeIds1.mediaTypeId2 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__2__DOCUMENTTYPEID"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.documentTypeId2 }}"
        - name: "SERVICES__UPLOADSERVICEDOCUMENTTYPEIDS__2__MEDIATYPES__0"
          value: "{{ .Values.backend.services.uploadServiceDocumentTypeIds.mediaTypeIds2.mediaTypeId0 }}"
        - name: "SERVICES__ITADMINROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__ITADMINROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.ITAdminRoles.role0 }}"
        - name: "SERVICES__ACTIVATIONUSERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__ACTIVATIONUSERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.activationUserRoles.role0 }}"
        - name: "SERVICES__ACTIVATIONUSERROLES__0__USERROLENAMES__1"
          value: "{{ .Values.backend.services.activationUserRoles.role1 }}"
        - name: "SERVICES__SALESMANAGERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__SALESMANAGERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.salesManagerRoles.role0 }}"
        - name: "SERVICES__SERVICEACCOUNTROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.technicalRolesManagement }}"
        - name: "SERVICES__SERVICEACCOUNTROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.serviceAccountRoles.role0 }}"
        - name: "SERVICES__SERVICEMANAGERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__SERVICEMANAGERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.serviceManagerRoles.role0 }}"
        - name: "SERVICES__SUBSCRIPTIONMANAGERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__SUBSCRIPTIONMANAGERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.subscriptionManagerRoles.role0 }}"
        - name: "SERVICES__SUBSCRIPTIONMANAGERROLES__0__USERROLENAMES__1"
          value: "{{ .Values.backend.services.subscriptionManagerRoles.role1 }}"
        - name: "SERVICES__SERVICEOVERVIEWADDRESS"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.services.serviceOverviewPath }}"
        - name: "SERVICES__SUBMITSERVICENOTIFICATIONTYPEIDS__0"
          value: "{{ .Values.backend.services.submitServiceNotificationTypeIds.type0 }}"
        - name: "SWAGGERENABLED"
          value: "{{ .Values.backend.services.swaggerEnabled }}"
        - name: "SERVICES__SERVICEIMAGEDOCUMENTTYPEIDS__0"
          value: "{{ .Values.backend.services.serviceImageDocumentTypeIds.type0 }}"
        - name: "SERVICES__SERVICEIMAGEDOCUMENTTYPEIDS__1"
          value: "{{ .Values.backend.services.serviceImageDocumentTypeIds.type1 }}"
        - name: "SERVICES__SERVICEIMAGEDOCUMENTTYPEIDS__2"
          value: "{{ .Values.backend.services.serviceImageDocumentTypeIds.type2 }}"
        - name: "SERVICES__OFFERSTATUSIDS__0"
          value: "{{ .Values.backend.services.offerStatusIds.status0 }}"
        - name: "SERVICES__OFFERSTATUSIDS__1"
          value: "{{ .Values.backend.services.offerStatusIds.status1 }}"
        - name: "SERVICES__DELETEDOCUMENTTYPEIDS__0"
          value: "{{ .Values.backend.services.deleteDocumentTypeIds.type0 }}"
        - name: "SERVICES__DELETEDOCUMENTTYPEIDS__1"
          value: "{{ .Values.backend.services.deleteDocumentTypeIds.type1 }}"
        - name: "SERVICES__DELETEDOCUMENTTYPEIDS__2"
          value: "{{ .Values.backend.services.deleteDocumentTypeIds.type2 }}"
        - name: "SERVICES__TECHNICALUSERPROFILECLIENT"
          value: "{{ .Values.backend.services.technicalUserProfileClient }}"
        - name: "SERVICES__COMPANYADMINROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.portal }}"
        - name: "SERVICES__COMPANYADMINROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.services.companyAdminRoles.role0 }}"
        - name: "SERVICES__DIMUSERROLES__0__CLIENTID"
          value: "{{ .Values.centralidp.clients.technicalRolesManagement }}"
        - name: "SERVICES__DIMUSERROLES__0__USERROLENAMES__0"
          value: "{{ .Values.backend.administration.serviceAccount.dimCreationRoles.role0 }}"
        - name: "MAILINGPROCESSCREATION__ENCRYPTIONCONFIGINDEX"
          value: "{{ .Values.backend.processesworker.mailing.encryptionConfigIndex }}"
        - name: "MAILINGPROCESSCREATION__ENCRYPTIONCONFIGS__0__INDEX"
          value: "{{ .Values.backend.processesworker.mailing.encryptionConfigs.index0.index }}"
        - name: "MAILINGPROCESSCREATION__ENCRYPTIONCONFIGS__0__ENCRYPTIONKEY"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "mailing-encryption-key0"
        - name: "MAILINGPROCESSCREATION__ENCRYPTIONCONFIGS__0__CIPHERMODE"
          value: "{{ .Values.backend.processesworker.mailing.encryptionConfigs.index0.cipherMode }}"
        - name: "MAILINGPROCESSCREATION__ENCRYPTIONCONFIGS__0__PADDINGMODE"
          value: "{{ .Values.backend.processesworker.mailing.encryptionConfigs.index0.paddingMode }}"
        - name: "DIM__USERNAME"
          value: "{{ .Values.backend.placeholder }}"
        - name: "DIM__PASSWORD"
          value: "{{ .Values.backend.placeholder }}"
        - name: "DIM__CLIENTID"
          value: "{{ .Values.backend.processesworker.dim.clientId }}"
        - name: "DIM__GRANTTYPE"
          value: "{{ .Values.backend.processesworker.dim.grantType }}"
        - name: "DIM__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "dim-client-secret"
        - name: "DIM__SCOPE"
          value: "{{ .Values.backend.processesworker.dim.scope }}"
        - name: "DIM__TOKENADDRESS"
          value: "{{ .Values.centralidp.address }}{{ .Values.backend.keycloak.central.tokenPath }}"
        - name: "DIM__BASEADDRESS"
          value: "{{ .Values.dimWrapper.baseAddress }}{{ .Values.dimWrapper.apiPath }}"
        - name: "DIM__UNIVERSALRESOLVERADDRESS"
          value: "{{ .Values.backend.processesworker.dim.universalResolverAddress }}"
        - name: "DIM__DIDDOCUMENTBASELOCATION"
          value: "{{ .Values.portalAddress }}{{ .Values.backend.processesworker.dim.didDocumentPath }}"
        - name: "DIM__MAXVALIDATIONTIMEINDAYS"
          value: "{{ .Values.backend.processesworker.dim.maxValidationTimeInDays }}"
        - name: "DIM__ENCRYPTIONCONFIGINDEX"
          value: "{{ .Values.backend.processesworker.dim.encryptionConfigIndex }}"
        - name: "DIM__ENCRYPTIONCONFIGS__0__INDEX"
          value: "{{ .Values.backend.processesworker.dim.encryptionConfigs.index0.index }}"
        - name: "DIM__ENCRYPTIONCONFIGS__0__ENCRYPTIONKEY"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.interfaces.secret }}"
              key: "dim-encryption-key0"
        - name: "DIM__ENCRYPTIONCONFIGS__0__CIPHERMODE"
          value: "{{ .Values.backend.processesworker.dim.encryptionConfigs.index0.cipherMode }}"
        - name: "DIM__ENCRYPTIONCONFIGS__0__PADDINGMODE"
          value: "{{ .Values.backend.processesworker.dim.encryptionConfigs.index0.paddingMode }}"
        ports:
        - name: http
          containerPort: {{ .Values.portContainer }}
          protocol: TCP
        startupProbe:
          httpGet:
            path: {{ .Values.backend.healthChecks.startup.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          successThreshold: {{ .Values.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: {{ .Values.backend.healthChecks.liveness.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.backend.healthChecks.readyness.path }}
            port: {{ .Values.portContainer }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        resources:
          {{- toYaml .Values.backend.services.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /mnt/tmp
          name: tmp
      volumes:
      - emptyDir: {}
        name: tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
