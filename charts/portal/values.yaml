###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

name: "portal"

# -- Provide portal base address.
portalAddress: "https://portal.example.org"

# -- Provide portal-backend base address.
portalBackendAddress: "https://portal-backend.example.org"

# -- Provide centralidp base address (CX IAM), without trailing '/auth'.
centralidpAddress: "https://centralidp.example.org"

# -- Provide sharedidp address (CX IAM), without trailing '/auth'.
sharedidpAddress: "https://sharedidp.example.org"

# -- Provide semantics base address.
semanticsAddress: "https://semantics.example.org"

# -- Provide bpdm partners pool base address.
bpdmPartnersPoolAddress: "https://business-partners.example.org"

# -- Provide bpdm portal gate base address.
bpdmPortalGateAddress: "https://business-partners.example.org"

# -- Provide custodian base address.
custodianAddress: "https://managed-identity-wallets.example.org"

# -- Provide sdfactory base address.
sdfactoryAddress: "https://sdfactory.example.org"

# -- Provide clearinghouse base address.
clearinghouseAddress: "https://validation.example.org"
# -- Provide clearinghouse token address.
clearinghouseTokenAddress: "https://keycloak.example.org/realms/example/protocol/openid-connect/token"

frontend:
  ingress:
  # -- Portal frontend ingress parameters,
    # enable ingress record generation for portal frontend.
    enabled: false
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/$1"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      # -- Provide CORS allowed origin.
      nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.example.org"
    tls:
      # -- Provide tls secret.
      - secretName: ""
        # -- Provide host for tls secret.
        hosts:
          - ""
    hosts:
      # -- Provide default path for the ingress record.
      - host: "portal.example.org"
        paths:
          - path: "/(.*)"
            pathType: "Prefix"
            backend:
              service: "portal"
              port: 8080
          - path: "/registration/(.*)"
            pathType: "Prefix"
            backend:
              service: "registration"
              port: 8080
          - path: "/((assets|documentation)/.*)"
            pathType: "Prefix"
            backend:
              service: "assets"
              port: 8080
  portal:
    name: "portal"
    image:
      name: "tractusx/portal-frontend"
      portaltag: f607242e3ebac4e03bb1ce14c5ac591b294fba08
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
  registration:
    name: "registration"
    image:
      name: "tractusx/portal-frontend-registration"
      registrationtag: b3072b0f21594393013a8bec9acc5f4e44133e80
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
  assets:
    name: "assets"
    image:
      name: "tractusx/portal-assets"
      assetstag: 3330fe360d55b772451e86951edb6a7ab331b331
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    path: "/assets"
  centralidpAuthPath: "/auth"
  bpdmPartnersPoolApiPath: "/pool/api"

backend:
  ingress:
  # -- Portal-backend ingress parameters,
    # enable ingress record generation for portal-backend.
    enabled: false
    name: "portal-backend"
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "8m"
      # -- Provide CORS allowed origin.
      nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.example.org"
    tls:
      # -- Provide tls secret.
      - secretName: ""
        # -- Provide host for tls secret.
        hosts:
          - ""
    hosts:
      # -- Provide default path for the ingress record.
      - host: "portal-backend.example.org"
        paths:
          - path: "/api/registration"
            pathType: "Prefix"
            backend:
              service: "registration-service"
              port: 8080
          - path: "/api/administration"
            pathType: "Prefix"
            backend:
              service: "administration-service"
              port: 8080
          - path: "/api/notification"
            pathType: "Prefix"
            backend:
              service: "notification-service"
              port: 8080
          - path: "/api/provisioning"
            pathType: "Prefix"
            backend:
              service: "provisioning-service"
              port: 8080
          - path: "/api/apps"
            pathType: "Prefix"
            backend:
              service: "marketplace-app-service"
              port: 8080
          - path: "/api/services"
            pathType: "Prefix"
            backend:
              service: "services-service"
              port: 8080
  dotnetEnvironment: "Production"
  dbConnection:
    schema: "portal"
    sslMode: "Disable"
  portalHomePath: "/home"
  userManagementPath: "/usermanagement"
  keycloak:
    # -- Secret containing the database-password and the client-secret for the connection to the centralidp (CX IAM) and the client-secret for the connection to the sharedidp (CX-IAM).
    secret: "secret-backend-keycloak"
    central:
      # -- Provide centralidp client-id from CX IAM centralidp.
      clientId: "central-client-id"
      # -- Client-secret for centralidp client-id. Secret-key 'central-client-secret'.
      clientSecret: ""
      authRealm: "CX-Central"
      jwtBearerOptions:
        requireHttpsMetadata: "true"
        metadataPath: "/auth/realms/CX-Central/.well-known/openid-configuration"
        tokenValidationParameters:
          validIssuerPath: "/auth/realms/CX-Central"
          validAudiencePortal: "Cl2-CX-Portal"
          validAudienceRegistration: "Cl1-CX-Registration"
        refreshInterval: "00:00:30"
      tokenPath: "/auth/realms/CX-Central/protocol/openid-connect/token"
      dbConnection:
        host: "centralidp-postgresql-primary"
        port: 5432
        user: "kccentral"
        database: "iamcentralidp"
        # -- Password for the kccentral username. Secret-key 'central-db-password'.
        password: ""
        schema: "public"
        sslMode: "Disable"
      # -- Flag if the api should be used with an leading /auth path
      useAuthTrail: true
    shared:
      # -- Provide sharedidp client-id from CX IAM sharedidp.
      clientId: "shared-client-id"
      # -- Client-secret for sharedidp client-id. Secret-key 'shared-client-secret'.
      clientSecret: ""
      authRealm: "master"
      # -- Flag if the api should be used with an leading /auth path
      useAuthTrail: true
  mailing:
    # -- Secret containing the passwords for backend.mailing and backend.provisioning.sharedRealm.
    secret: "secret-backend-mailing"
    # -- Provide host.
    host: "smtp.example.org"
    # -- Provide port.
    port: "587"
    # -- Provide user.
    user: "smtp-user"
    # -- Password for the smtp username. Secret-key 'password'.
    password: ""
  interfaces:
    # -- Secret containing the client-secrets for the connection to custodian, bpdm, sdFactory, clearinghouse, offer provider and onboarding service provider.
    secret: "secret-backend-interfaces"
  healthChecks:
    startup:
      path: "/health/startup"
    liveness:
      path: "/healthz"
    readyness:
      path: "/ready"
  registration:
    name: "registration-service"
    image:
      name: "tractusx/portal-registration-service"
      registrationservicetag: cb9a747704501488a268f9c7cacbc217c6fb3fd5
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    logging:
      bpdmLibrary: "Information"
      registrationService: "Information"
      default: "Information"
    # -- Keycloak Healthcheck to be enabled for startupProbe;
    # once the centralidp Keycloak instance is available, enable healthcheck by uncommenting.
    healthChecks:
      startup:
        tags:
        # - name: "HEALTHCHECKS__0__TAGS__0"
        #   value: "keycloak"
        - name: "HEALTHCHECKS__0__TAGS__1"
          value: "portaldb"
    portalRegistrationPath: "/registration"
    keycloakClientId: "Cl1-CX-Registration"
    applicationStatusIds:
      status0: "SUBMITTED"
      status1: "DECLINED"
      status2: "CONFIRMED"
    documentTypeIds:
      type0: "CX_FRAME_CONTRACT"
      type1: "COMMERCIAL_REGISTER_EXTRACT"
    swaggerEnabled: false
    registrationDocumentTypeIds:
      type0: "CX_FRAME_CONTRACT"
    submitDocumentTypeIds:
      type0: "COMMERCIAL_REGISTER_EXTRACT"
  administration:
    name: "administration-service"
    image:
      name: "tractusx/portal-administration-service"
      administrationservicetag: cb9a747704501488a268f9c7cacbc217c6fb3fd5
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    logging:
      businessLogic: "Information"
      sdfactoryLibrary: "Information"
      bpdmLibrary: "Information"
      custodianLibrary: "Information"
      default: "Information"
    # -- Keycloak Healthcheck to be enabled for startupProbe;
    # once the centralidp Keycloak instance is available, enable healthcheck by uncommenting.
    healthChecks:
      startup:
        tags:
        # - name: "HEALTHCHECKS__0__TAGS__0"
        #   value: "keycloak"
        - name: "HEALTHCHECKS__0__TAGS__1"
          value: "portaldb"
        - name: "HEALTHCHECKS__0__TAGS__2"
          value: "provisioningdb"
    companyData:
      useCaseParticipationMediaTypes:
        type0: "PDF"
      ssiCertificateMediaTypes:
        type0: "PDF"
    connectors:
      validCertificationContentTypes:
        type0: "application/x-pem-file"
        type1: "application/x-x509-ca-cert"
        type2: "application/pkix-cert"
        type3: "application/octet-stream"
      selfDescriptionDocumentPath: /api/administration/documents/selfDescription
    keycloakClientId: "Cl2-CX-Portal"
    identityProviderAdmin:
      csvSettings:
        fileName: "identityproviderlinks.csv"
        contentType: "text/csv"
        charset: "UTF-8"
        separator: ","
        headerUserId: "UserId"
        headerFirstName: "FirstName"
        headerLastName: "LastName"
        headerEmail: "Email"
        headerProviderAlias: "ProviderAlias"
        headerProviderUserId: "ProviderUserId"
        headerProviderUserName: "ProviderUserName"
    invitation:
      invitedUserInitialRoles:
        role0: "Company Admin"
      initialLoginTheme: "catenax-shared"
    registration:
      documentTypeIds:
        type0: "COMMERCIAL_REGISTER_EXTRACT"
    userManagement:
      companyUserStatusIds:
        status0: "ACTIVE"
        status1: "INACTIVE"
      userAdminRoles:
        role0: "Company Admin"
        role1: "IT Admin"
    serviceAccount:
      clientId: "technical_roles_management"
    swaggerEnabled: false
    frameDocumentTypeIds:
      type0: "CX_FRAME_CONTRACT"
    network2network:
      initialRoles:
        role0: "Company Admin"
    onboardingServiceProvider:
      # -- Client-secret for onboardingserviceprovider encryptionKey. Secret-key 'onboardingserviceprovider-encryption-key'.
      encryptionKey: ""
  provisioning:
    centralRealm: "CX-Central"
    centralRealmId: "CX-Central"
    invitedUserInitialRoles:
      registration: "Company Admin"
    serviceAccountClientPrefix: "sa"
    centralIdentityProvider:
      clientId: "central-idp"
    sharedRealmClient:
      clientId: "central-idp"
    sharedRealm:
      smtpServer:
        # -- Provide host.
        host: "smtp.example.org"
        # -- Provide port.
        port: "587"
        # -- Provide user.
        user: "smtp-user"
        # -- Password for the smtp username. Secret-key 'provisioning-sharedrealm-password'.
        password: ""
        ssl: ""
        startTls: "true"
        auth: "true"
        # -- Provide from.
        from: "smtp@example.org"
        # -- Provide replyTo.
        replyTo: "smtp@example.org"
  appmarketplace:
    name: "marketplace-app-service"
    image:
      name: "tractusx/portal-marketplace-app-service"
      appmarketplaceservicetag: cb9a747704501488a268f9c7cacbc217c6fb3fd5
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    logging:
      default: "Information"
      offersLibrary: "Information"
    # -- Keycloak Healthcheck to be enabled for startupProbe;
    # once the centralidp Keycloak instance is available, enable healthcheck by uncommenting.
    healthChecks:
      startup:
        tags:
        # - name: "HEALTHCHECKS__0__TAGS__0"
        #   value: "keycloak"
        - name: "HEALTHCHECKS__0__TAGS__1"
          value: "portaldb"
    appOverviewPath: "/appoverview"
    catenaAdminRoles:
      role0: "CX Admin"
    serviceAccountRoles:
      role0: "App Tech User"
    salesManagerRoles:
      role0: "Sales Manager"
    serviceManagerRoles:
      role0: "App Manager"
    subscriptionManagerRoles:
      role0: "App Manager"
      role1: "Sales Manger"
    activeAppCompanyAdminRoles:
      role0: "IT Admin"
      role1: "Company Admin"
    approveAppUserRoles:
      role0: "Sales Manager"
      role1: "Service Manager"
    activationUserRoles:
      role0: "Sales Manager"
      role1: "App Manager"
    ITAdminRoles:
      role0: "IT Admin"
    uploadAppDocumentTypeIds:
      documentTypeId0: "APP_TECHNICAL_INFORMATION"
      mediaTypeIds0:
        mediaTypeId0: "PDF"
      documentTypeId1: "APP_LEADIMAGE"
      mediaTypeIds1:
        mediaTypeId0: "JPEG"
        mediaTypeId1: "PNG"
        mediaTypeId2: "SVG"
      documentTypeId2: "APP_IMAGE"
      mediaTypeIds2:
        mediaTypeId0: "JPEG"
        mediaTypeId1: "PNG"
        mediaTypeId2: "SVG"
      documentTypeId3: "APP_CONTRACT"
      mediaTypeIds3:
        mediaTypeId0: "PDF"
      documentTypeId4: "ADDITIONAL_DETAILS"
      mediaTypeIds4:
        mediaTypeId0: "PDF"
      documentTypeId5: "CONFORMITY_APPROVAL_BUSINESS_APPS"
      mediaTypeIds5:
        mediaTypeId0: "PDF"
    deleteDocumentTypeIds:
      type0: "APP_CONTRACT"
      type1: "ADDITIONAL_DETAILS"
      type2: "APP_TECHNICAL_INFORMATION"
      type3: "APP_LEADIMAGE"
      type4: "APP_IMAGE"
      type5: "CONFORMITY_APPROVAL_BUSINESS_APPS"
    submitAppDocumentTypeIds:
      type0: "APP_LEADIMAGE"
      type1: "APP_IMAGE"
      type2: "CONFORMITY_APPROVAL_BUSINESS_APPS"
    notificationTypeIds:
      type0: "APP_RELEASE_REQUEST"
    activeAppNotificationTypeIds:
      type0: "APP_ROLE_ADDED"
    submitAppNotificationTypeIds:
      type0: "APP_RELEASE_REQUEST"
    approveAppNotificationTypeIds:
      type0: "APP_RELEASE_APPROVAL"
    appImageDocumentTypeIds:
      type0: "APP_LEADIMAGE"
      type1: "APP_IMAGE"
      type2: "APP_CONTRACT"
      type3: "ADDITIONAL_DETAILS"
      type4: "APP_TECHNICAL_INFORMATION"
      type5: "CONFORMITY_APPROVAL_BUSINESS_APPS"
    offerStatusIds:
      status0: "IN_REVIEW"
      status1: "ACTIVE"
    swaggerEnabled: false
    technicalUserProfileClient: "technical_roles_management"
    companyAdminRoles:
      role0: "Company Admin"
  portalmigrations:
    name: "portal-migrations"
    image:
      name: "tractusx/portal-portal-migrations"
      portalmigrationstag: 249e5f96eb0e96bd4cf53069b2aad7ba5b9fd21a
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    seeding:
      testDataEnvironments: ""
      # -- when changing the testDataPath the processIdentity needs to be adjusted as well,
      # or it must be ensured that the identity is existing within the files under the new path
      testDataPaths: "Seeder/Data"
    processIdentity:
      userEntityId: 090c9121-7380-4bb0-bb10-fffd344f930a
      processUserId: d21d2e8a-fe35-483c-b2b8-4100ed7f0953
      identityTypeId: 2
      processUserCompanyId: 2dc4249f-b5ca-4d42-bef1-7a7a950a4f87
    logging:
      default: "Information"
  portalmaintenance:
    name: "portal-maintenance"
    image:
      name: "tractusx/portal-maintenance-service"
      portalmaintenancetag: 249e5f96eb0e96bd4cf53069b2aad7ba5b9fd21a
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    processIdentity:
      userEntityId: 090c9121-7380-4bb0-bb10-fffd344f930a
      processUserId: d21d2e8a-fe35-483c-b2b8-4100ed7f0953
      identityTypeId: 2
      processUserCompanyId: 2dc4249f-b5ca-4d42-bef1-7a7a950a4f87
    logging:
      default: "Information"
  notification:
    name: "notification-service"
    image:
      name: "tractusx/portal-notification-service"
      notificationservicetag: cb9a747704501488a268f9c7cacbc217c6fb3fd5
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    # -- Keycloak Healthcheck to be enabled for startupProbe;
    # once the centralidp Keycloak instance is available, enable healthcheck by uncommenting.
    healthChecks:
      startup:
        tags:
        # - name: "HEALTHCHECKS__0__TAGS__0"
        #   value: "keycloak"
        - name: "HEALTHCHECKS__0__TAGS__1"
          value: "portaldb"
    swaggerEnabled: false
    logging:
      default: "Information"
  services:
    name: "services-service"
    image:
      name: "tractusx/portal-services-service"
      servicesservicetag: cb9a747704501488a268f9c7cacbc217c6fb3fd5
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    logging:
      default: "Information"
      offersLibrary: "Information"
    # -- Keycloak Healthcheck to be enabled for startupProbe;
    # once the centralidp Keycloak instance is available, enable healthcheck by uncommenting.
    healthChecks:
      startup:
        tags:
        # - name: "HEALTHCHECKS__0__TAGS__0"
        #   value: "keycloak"
        - name: "HEALTHCHECKS__0__TAGS__1"
          value: "portaldb"
    serviceMarketplacePath: "/servicemarketplace"
    catenaAdminRoles:
      role0: "CX Admin"
    serviceAccountRoles:
      role0: "App Tech User"
    salesManagerRoles:
      role0: "Sales Manager"
    serviceManagerRoles:
      role0: "Service Manager"
    subscriptionManagerRoles:
      role0: "Service Manager"
      role1: "Sales Manger"
    approveServiceUserRoles:
      role0: "Sales Manager"
      role1: "Service Manager"
    activationUserRoles:
      role0: "Sales Manager"
      role1: "Service Manager"
    ITAdminRoles:
      role0: "IT Admin"
    uploadServiceDocumentTypeIds:
      documentTypeId0: "ADDITIONAL_DETAILS"
      mediaTypeIds0:
        mediaTypeId0: "PDF"
      documentTypeId1: "SERVICE_LEADIMAGE"
      mediaTypeIds1:
        mediaTypeId0: "JPEG"
        mediaTypeId1: "PNG"
        mediaTypeId2: "SVG"
    submitServiceNotificationTypeIds:
      type0: "SERVICE_RELEASE_REQUEST"
    approveServiceNotificationTypeIds:
      type0: "SERVICE_RELEASE_APPROVAL"
    swaggerEnabled: false
    serviceImageDocumentTypeIds:
      type0: "ADDITIONAL_DETAILS"
      type1: "CONFORMITY_APPROVAL_SERVICES"
      type2: "SERVICE_LEADIMAGE"
    offerStatusIds:
      status0: "IN_REVIEW"
      status1: "ACTIVE"
    deleteDocumentTypeIds:
      type0: "SERVICE_LEADIMAGE"
      type1: "ADDITIONAL_DETAILS"
    technicalUserProfileClient: "technical_roles_management"
    companyAdminRoles:
      role0: "Company Admin"
  provisioningmigrations:
    name: "provisioning-migrations"
    image:
      name: "tractusx/portal-provisioning-migrations"
      provisioningmigrationstag: 249e5f96eb0e96bd4cf53069b2aad7ba5b9fd21a
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    logging:
      default: "Information"
  processesworker:
    name: "processes-worker"
    image:
      name: "tractusx/portal-processes-worker"
      processesworkertag: cb9a747704501488a268f9c7cacbc217c6fb3fd5
    # -- We recommend not to specify default resources and to leave this as a conscious choice for the user.
    # If you do want to specify resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    resources: {}
      # limits:
      #   cpu: 250m
      #   memory: 256Mi
      # requests:
      #   cpu: 250m
      #   memory: 256Mi
    logging:
      default: "Information"
      processesLibrary: "Information"
      bpdmLibrary: "Information"
      clearinghouseLibrary: "Information"
      custodianLibrary: "Information"
      sdfactoryLibrary: "Information"
      offerProvider: "Information"
    applicationActivation:
      applicationApprovalInitialRoles:
        portal:
          role0: "Company Admin"
        registration:
          role0: "Company Admin"
      clientToRemoveRolesOnActivation:
        client0: "Cl1-CX-Registration"
      welcomeNotificationTypeIds:
        type0: "WELCOME"
        type1: "WELCOME_USE_CASES"
        type2: "WELCOME_SERVICE_PROVIDER"
        type3: "WELCOME_CONNECTOR_REGISTRATION"
        type4: "WELCOME_APP_MARKETPLACE"
      loginTheme: "catenax-shared-portal"
    bpdm:
      scope: "openid"
      grantType: "client_credentials"
      # -- Provide bpdm client-id from CX IAM centralidp.
      clientId: "bpdm-client-id"
      # -- Client-secret for bpdm client-id. Secret-key 'bpdm-client-secret'.
      clientSecret: ""
    custodian:
      membershipErrorMessage: "Credential of type MembershipCredential is already exists"
      scope: "openid"
      grantType: "client_credentials"
      # -- Provide custodian client-id from CX IAM centralidp.
      clientId: "custodian-client-id"
      # -- Client-secret for custodian client-id. Secret-key 'custodian-client-secret'.
      clientSecret: ""
    sdfactory:
      selfdescriptionPath: "/api/rel3/selfdescription"
      scope: "openid"
      grantType: "client_credentials"
      # -- Provide BPN for sdfactory.
      issuerBpn: "BPNDUMMY000DUMMY"
      # -- Provide sdfactory client-id from CX IAM centralidp.
      clientId: "sdfactory-client-id"
      # -- Client-secret for sdfactory client-id. Secret-key 'sdfactory-client-secret'.
      clientSecret: ""
    clearinghouse:
      scope: "openid"
      grantType: "client_credentials"
      # -- Provide clearinghouse client-id from clearinghouse IAM.
      clientId: "clearinghouse-client-id"
      # -- Client-secret for clearinghouse client-id. Secret-key 'clearinghouse-client-secret'.
      clientSecret: ""
      callbackPath: "/api/administration/registration/clearinghouse"
    processes:
      lockExpirySeconds: "300"
    offerSubscriptionProcess:
      serviceAccountRoles:
        role0: "Digital Twin Management"
      serviceManagerRoles:
        role0: "App Manager"
      itAdminRoles:
        role0: "IT Admin"
    offerprovider:
      serviceManagerRoles:
        role0: "App Manager"
      scope: "openid"
      grantType: "client_credentials"
      # -- Provide offerprovider client-id from CX IAM centralidp.
      clientId: "offerprovider-client-id"
      # -- Client-secret for offer provider client-id. Secret-key 'offerprovider-client-secret'.
      clientSecret: ""
    processIdentity:
      userEntityId: 090c9121-7380-4bb0-bb10-fffd344f930a
      processUserId: d21d2e8a-fe35-483c-b2b8-4100ed7f0953
      identityTypeId: 2
      processUserCompanyId: 2dc4249f-b5ca-4d42-bef1-7a7a950a4f87
    networkRegistration:
      initialRoles:
        role0: "Company Admin"
    onboardingServiceProvider:
      # -- Client-secret for onboardingserviceprovider encryptionKey. Secret-key 'process-onboardingserviceprovider-encryption-key'.
      encryptionKey: ""
  clients:
    portal: "Cl2-CX-Portal"
    registration: "Cl1-CX-Registration"
    technicalRolesManagement: "technical_roles_management"
  placeholder: "empty"

postgresql:
# -- PostgreSQL chart configuration
  # Switch to enable or disable the PostgreSQL helm chart
  enabled: true
  # -- FullnameOverride to 'portal-backend-postgresql'.
  fullnameOverride: "portal-backend-postgresql"
  auth:
    # -- Database name
    database: "postgres"
    # -- Database port number
    port: 5432
    # -- Secret containing the passwords for root usernames postgres and non-root usernames repl_user, portal and provisioning.
    existingSecret: "secret-postgres-init"
    # -- Password for the root username 'postgres'. Secret-key 'postgres-password'.
    password: ""
    # -- Password for the non-root username 'repl_user'. Secret-key 'replication-password'.
    replicationPassword: ""
    # -- Non-root username for portal.
    portalUser: "portal"
    # -- Non-root username for provisioning.
    provisioningUser: "provisioning"
    # -- Password for the non-root username 'portal'. Secret-key 'portal-password'.
    portalPassword: ""
    # -- Password for the non-root username 'provisioning'. Secret-key 'provisioning-password'.
    provisioningPassword: ""
  architecture: "replication"
  audit:
    pgAuditLog: "write, ddl"
    logLinePrefix: "%m %u %d "
  primary:
    # -- Extended PostgreSQL Primary configuration (increase of max_connections recommended - default is 100)
    extendedConfiguration: ""
    initdb:
      scriptsConfigMap: "configmap-postgres-init"
    extraEnvVars:
      - name: "PORTAL_PASSWORD"
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.auth.existingSecret }}"
            key: "portal-password"
      - name: "PROVISIONING_PASSWORD"
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.auth.existingSecret }}"
            key: "provisioning-password"
  readReplicas:
  # -- Extended PostgreSQL read only replicas configuration (increase of max_connections recommended - default is 100)
    extendedConfiguration: ""

externalDatabase:
# -- External PostgreSQL configuration
# IMPORTANT: init scripts (01-init-db-user.sh and 02-init-db.sql) available
# in templates/configmap-backend-postgres-init.yaml need to be executed beforehand.
  # Database host
  host: "portal-backend-postgresql-external-db"
  # -- Database name
  database: "postgres"
  # -- Database port number
  port: 5432
  # -- Secret containing the passwords non-root usernames portal and provisioning.
  secret: "secret-postgres-external-db"
  # -- Non-root username for portal.
  portalUser: "portal"
  # -- Non-root username for provisioning.
  provisioningUser: "provisioning"
  # -- Password for the non-root username 'portal'. Secret-key 'portal-password'.
  portalPassword: ""
  # -- Password for the non-root username 'provisioning'. Secret-key 'provisioning-password'.
  provisioningPassword: ""

portContainer: 8080

portService: 8080

replicaCount: 3

# -- Node labels for pod assignment
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

affinity:
# -- Following Catena-X Helm Best Practices,
# [reference](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity).
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

updateStrategy:
# -- Update strategy type,
# rolling update configuration parameters,
# [reference](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies).
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# -- Following Catena-X Helm Best Practices,
# [reference](https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210).
startupProbe:
  failureThreshold: 30
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
